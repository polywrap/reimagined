import { bufferToU32 } from "../../buffer";
{{#types}}
{{#model.isClass}}
{{^model.isExternal}}
import { {{model.name}}Wrapped } from "../../wrapped/{{model.name}}Wrapped";
{{/model.isExternal}}
{{/model.isClass}}
{{/types}}

export function invokeClassMethod(buffer: ArrayBuffer): ArrayBuffer {
  const classId = bufferToU32(buffer);
  const method = bufferToU32(buffer, 4);
  const dataBuffer = buffer.slice(8);

  switch (classId) {
    {{#types}}
    {{#model.isClass}}
    {{^model.isExternal}}
    case WrapManifest.Internal.Class.{{model.name}}:
      return {{model.name}}Wrapped.invokeMethod(method, dataBuffer);
    {{/model.isExternal}}
    {{/model.isClass}}
    {{/types}}
    default:
      throw new Error("Unknown class ID: " + classId);
  }
}
