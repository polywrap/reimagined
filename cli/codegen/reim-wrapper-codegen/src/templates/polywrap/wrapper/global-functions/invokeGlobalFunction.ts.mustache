import { GlobalFunction } from "./GlobalFunction";
import { bufferToU32 } from "../../buffer";
import { 
  {{#globalFunctions}}
  {{^model.isExternal}}
  {{model.name}}Wrapped,
  {{/model.isExternal}}
  {{/globalFunctions}}
} from "./list";

export function invokeGlobalFunction(buffer: ArrayBuffer): ArrayBuffer {
  const funcId = bufferToU32(buffer);
  const dataBuffer = buffer.slice(4);

  switch (funcId) {
    {{#globalFunctions}}
    {{^model.isExternal}}
    case GlobalFunction.{{model.namePascalCase}}:
      return {{model.name}}Wrapped(dataBuffer);
    {{/model.isExternal}}
    {{/globalFunctions}}
    default:
      throw new Error("Unknown global function: " + funcId);
  }
}
